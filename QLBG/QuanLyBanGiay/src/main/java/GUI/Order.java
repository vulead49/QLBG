/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import BUS.OrderDetails_BUS;
import BUS.Order_BUS;
import BUS.Storage_BUS;
import DTO.OrderDetails_DTO;
import DTO.Order_DTO;
import DTO.Storage_DTO;
import java.awt.event.ActionListener;
import java.sql.Date;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

/**
 *
 * @author Mai
 */
public class Order extends javax.swing.JFrame {
    Order_BUS dhBUS = new Order_BUS();
    OrderDetails_BUS ctdhBUS = new OrderDetails_BUS();
    Storage_BUS strBUS = new Storage_BUS();
    /**
     * Creates new form Order
     */
    public Order() {
        initComponents();
        loadList();
        populateCB();
        loadListDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDonHang = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldNAME = new javax.swing.JTextField();
        jDateCREATED = new com.toedter.calendar.JDateChooser();
        jButtonADD = new javax.swing.JButton();
        jButtonEDIT = new javax.swing.JButton();
        UPDATE = new javax.swing.JButton();
        jButtonFind = new javax.swing.JButton();
        jComboBoxMaDH = new javax.swing.JComboBox<>();
        Exit = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jComboBoxPhuongThuc = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCTDH = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jComboBoxCTDH = new javax.swing.JComboBox<>();
        jTextFieldSize = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextFieldGiaBan = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButtonADD_CTDH = new javax.swing.JButton();
        jButtonDEL = new javax.swing.JButton();
        jButtonfindCTDH = new javax.swing.JButton();
        jComboBoxFind = new javax.swing.JComboBox<>();
        jButton10 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jComboBoxSP = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jTextFieldTongTien = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextFieldPL = new javax.swing.JTextField();
        hang = new javax.swing.JLabel();
        jTextFieldHang = new javax.swing.JTextField();
        LookSP = new javax.swing.JButton();
        jComboBoxSoluong = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1020, 754));

        jPanel2.setBackground(new java.awt.Color(203, 161, 106));
        jPanel2.setPreferredSize(new java.awt.Dimension(510, 754));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setText("Đơn hàng");

        jTableDonHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "MaDH", "TenKH", "NgayLap", "ThanhTien", "PhuongThuc"
            }
        ));
        jScrollPane1.setViewportView(jTableDonHang);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Tên khách hàng");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("Ngày tạo ");

        jButtonADD.setText("Tạo đơn hàng");
        jButtonADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonADDActionPerformed(evt);
            }
        });

        jButtonEDIT.setText("Sửa");
        jButtonEDIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEDITActionPerformed(evt);
            }
        });

        UPDATE.setText("Cập nhât");
        UPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UPDATEActionPerformed(evt);
            }
        });

        jButtonFind.setText("Tìm");
        jButtonFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFindActionPerformed(evt);
            }
        });

        jComboBoxMaDH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MaDH", " " }));

        Exit.setText("Thoát");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("Phương thức thanh toán");

        jComboBoxPhuongThuc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chưa thanh toán", "Tiền mặt", "Ví điện tử", "Thẻ" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxPhuongThuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(UPDATE))
                                .addGap(44, 44, 44)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jButtonEDIT)
                                        .addGap(31, 31, 31)
                                        .addComponent(jComboBoxMaDH, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jDateCREATED, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(18, 18, 18)
                                    .addComponent(jTextFieldNAME, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonFind)
                    .addComponent(jButtonADD))
                .addContainerGap(33, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Exit)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(362, 362, 362))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(49, 49, 49)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jDateCREATED, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UPDATE)
                    .addComponent(jButtonEDIT)
                    .addComponent(jButtonFind)
                    .addComponent(jComboBoxMaDH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jButtonADD)
                    .addComponent(jComboBoxPhuongThuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Exit)
                .addGap(64, 64, 64))
        );

        jPanel1.setBackground(new java.awt.Color(213, 192, 165));
        jPanel1.setPreferredSize(new java.awt.Dimension(510, 754));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setText("Chi tiết đơn hàng");

        jTableCTDH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "MaCTDH", "MaDH", "MaSP", "SoLuong", "GiaBan"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableCTDH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCTDHMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableCTDH);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Mã đơn hàng");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 51, 51));
        jLabel13.setText("Mã sản phẩm");

        jComboBoxCTDH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MaDH", " " }));
        jComboBoxCTDH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCTDHActionPerformed(evt);
            }
        });

        jTextFieldSize.setEditable(false);

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 51, 51));
        jLabel14.setText("Số lượng");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 51, 51));
        jLabel15.setText("Giá bán");

        jTextFieldGiaBan.setEditable(false);

        jButton5.setText("Sửa");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButtonADD_CTDH.setText("Thêm");
        jButtonADD_CTDH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonADD_CTDHActionPerformed(evt);
            }
        });

        jButtonDEL.setText("Xóa");
        jButtonDEL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDELActionPerformed(evt);
            }
        });

        jButtonfindCTDH.setText("Tìm");
        jButtonfindCTDH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonfindCTDHActionPerformed(evt);
            }
        });

        jComboBoxFind.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MaDH", " " }));

        jButton10.setText("In đơn hàng");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("Size");

        jComboBoxSP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MaSP" }));
        jComboBoxSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSPActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(51, 51, 51));
        jLabel16.setText("Tổng tiền");

        jTextFieldTongTien.setEditable(false);

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 51, 51));
        jLabel17.setText("Phân loại");

        jTextFieldPL.setEditable(false);

        hang.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        hang.setForeground(new java.awt.Color(51, 51, 51));
        hang.setText("Hãng");

        jTextFieldHang.setEditable(false);

        LookSP.setText("Xem kho SP");

        jComboBoxSoluong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxSoluong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSoluongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButtonADD_CTDH)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonDEL))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButtonfindCTDH)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxFind, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(LookSP)
                                .addGap(18, 18, 18)
                                .addComponent(jButton10)))
                        .addContainerGap(26, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel6)
                                .addComponent(jLabel13))
                            .addComponent(jLabel9)
                            .addComponent(jLabel17))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldPL, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldSize, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxCTDH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15)
                                    .addComponent(hang))
                                .addGap(40, 40, 40)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldHang, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldGiaBan, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxSoluong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel4)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(28, 28, 28)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxCTDH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(hang)
                    .addComponent(jTextFieldHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jComboBoxSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jTextFieldGiaBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(jComboBoxSoluong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldPL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16)
                        .addComponent(jTextFieldTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonADD_CTDH)
                    .addComponent(jButton5)
                    .addComponent(jButtonDEL))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonfindCTDH)
                    .addComponent(jComboBoxFind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LookSP)
                    .addComponent(jButton10))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(84, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        main m = new main();
        m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ExitActionPerformed

    private void UPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UPDATEActionPerformed
        // TODO add your handling code here:
        int selected = jTableDonHang.getSelectedRow();
        if (selected != -1) {
            try {
                  //   Giả sử MaDH ở cột 0.  Thay đổi số 0 nếu nó ở cột khác.
                String maDH = (String) jTableDonHang.getModel().getValueAt(selected, 0);
                
                float thanhtien = (float) jTableDonHang.getModel().getValueAt(selected, 3);
                
                String newtenKH = jTextFieldNAME.getText();
                String newPhuongThuc = (String) jComboBoxPhuongThuc.getSelectedItem();            
                if (jDateCREATED.getDate() == null) {
                    JOptionPane.showMessageDialog(this, "Vui lòng chọn ngày tạo!");
                    return;
                }
                java.sql.Date newDay = new java.sql.Date(jDateCREATED.getDate().getTime());
                
                // Tạo đối tượng Employee_DTO
                Order_DTO dh = new Order_DTO(  maDH, newtenKH, newDay,thanhtien , newPhuongThuc);

                // Gọi phương thức cập nhật từ BUS
                String result = dhBUS.updateDH(dh);
                JOptionPane.showMessageDialog(this, result);

                // Cập nhật lại danh sách nhân viên trên bảng
                loadList();
                jTextFieldNAME.setText("");
                jDateCREATED.setDate(null); 
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Có lỗi xảy ra! Vui lòng kiểm tra lại.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn đơn hàng cần cập nhật!");
            }
    }//GEN-LAST:event_UPDATEActionPerformed

    private void jButtonADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonADDActionPerformed
        // TODO add your handling code here:
        try {
            if (jTextFieldNAME.getText().isEmpty() || jDateCREATED.getDate() == null ) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đủ thông tin");
                return;
            }

       
            java.sql.Date NgayLap = new java.sql.Date(jDateCREATED.getDate().getTime());

            Order_DTO dh = new Order_DTO();

            // **Chuyển đổi MaNV từ int sang String**
            int newMaDH = generateMaDH(); // Hàm tạo mã số mới
            dh.setMaDH(String.valueOf(newMaDH)); // Chuyển thành String để truyền vào DTO

            dh.setTenKH(jTextFieldNAME.getText());
            dh.setNgayLap(NgayLap);
            dh.setPhuongThuc(jComboBoxPhuongThuc.getSelectedItem().toString());

            // **Gửi xuống BUS để thêm vào DB**
            String result = dhBUS.addDH(dh);
            JOptionPane.showMessageDialog(this, result);

            loadList();      
            populateCB();
            // **Reset form**

            jTextFieldNAME.setText("");
            jDateCREATED.setDate(null);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Mã cấp bậc phải là số!");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButtonADDActionPerformed

    private void jButtonFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFindActionPerformed
        // TODO add your handling code here:
        String selectedMaNCC = (String) jComboBoxMaDH.getSelectedItem();
        if(selectedMaNCC != null){
            searchNCC(selectedMaNCC);
        }        
    }//GEN-LAST:event_jButtonFindActionPerformed

    private void jButtonEDITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEDITActionPerformed
        // TODO add your handling code here:
        int selected = jTableDonHang.getSelectedRow();
        if (selected != -1) {
        try {
            // Lấy ID từ bảng
            String id = jTableDonHang.getValueAt(selected, 0).toString();
            Order_DTO dh =dhBUS.findbyID(id);
            jTextFieldNAME.setText(dh.getTenKH()); 
            jComboBoxPhuongThuc.setSelectedItem(dh.getPhuongThuc());
            // Chuyển đổi ngày sinh
            java.sql.Date sqlDate = dh.getNgayLap();
            if (sqlDate != null) {
                java.util.Date utilDate = new java.util.Date(sqlDate.getTime());
                jDateCREATED.setDate(utilDate);  // Đưa vào JDateChooser
                jDateCREATED.setDate(null);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi lấy dữ liệu Đơn Hàng!");
        }

    } else {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn đơn hàng để chỉnh sửa!");
    }
    }//GEN-LAST:event_jButtonEDITActionPerformed

    private void jButtonADD_CTDHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonADD_CTDHActionPerformed
        // TODO add your handling code here:
        try {
        // Kiểm tra dữ liệu nhập vào
        if (jComboBoxSoluong.getSelectedItem() == null || jTextFieldSize.getText().isEmpty() || jTextFieldGiaBan.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đủ thông tin");
            return;
        }

        // Kiểm tra giá trị jComboBoxMaDH
        if (jComboBoxMaDH.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn mã đơn hàng!");
            return;
        }

        int maDH;
        try {
            maDH = Integer.parseInt(jComboBoxCTDH.getSelectedItem().toString());
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Mã đơn hàng phải là số!");
            return;
        }

        // Lấy và kiểm tra các giá trị từ JTextField
        int maSP, soLuong;
        double giaBan;
        try {
            maSP = Integer.parseInt(jComboBoxSP.getSelectedItem().toString());
            soLuong = Integer.parseInt(jComboBoxSoluong.getSelectedItem().toString());
            giaBan = Double.parseDouble(jTextFieldTongTien.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đúng định dạng số cho Mã SP, Số lượng và Giá bán!");
            return;
        }
        
        // Kiểm tra số lượng tồn kho trước khi thêm
        int soLuongTonKho = ctdhBUS.getSoLuongTonKho(maSP); // Hàm này lấy số lượng từ DB


        // Tạo DTO
        OrderDetails_DTO ctdh = new OrderDetails_DTO();
        ctdh.setMaDH(maDH);
        ctdh.setMaSP(maSP);
        ctdh.setSoLuong(soLuong);
        ctdh.setGiaBan(giaBan);

        // Gửi xuống BUS để thêm vào DB
        String result = ctdhBUS.addCTDH(ctdh);
        if (result.equals("Tạo đơn hàng thành công!")) {
            // Cập nhật lại số lượng tồn kho
              
            ctdhBUS.updateSoLuongTonKho(maSP, soLuongTonKho - soLuong);
        }

        JOptionPane.showMessageDialog(this, result);
        
        editDHbyCTDH(maDH);
        loadList();

        // Cập nhật lại danh sách nhân viên trên bảng
        String n= jComboBoxCTDH.getSelectedItem().toString();
        if (n=="Xem tất cả") {
            loadListDetails();
        }
        else {
            int id = Integer.parseInt(n);
            searchCTDH(id);
        }   


    } catch (Exception e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_jButtonADD_CTDHActionPerformed

    private void jButtonDELActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDELActionPerformed
        // TODO add your handling code here:
        int select = jTableCTDH.getSelectedRow();
        if (select != -1) {
            // Lấy mã đơn hàng và mã sản phẩm từ dòng đang chọn
            String maCTDH = jTableCTDH.getValueAt(select, 0).toString(); // Mã đơn hàng

            int kq = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa chi tiết này không?", 
                                                   "Xác nhận", JOptionPane.YES_NO_OPTION);
            if (kq == JOptionPane.YES_OPTION) {
                // Gọi phương thức xóa
                ctdhBUS.deleteCTDH(Integer.parseInt(maCTDH)); 

                // Xóa dòng khỏi bảng
                ((DefaultTableModel) jTableCTDH.getModel()).removeRow(select);
                editDHbyCTDH(Integer.parseInt(jTableCTDH.getValueAt(select, 1).toString()));
                loadList();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để xóa!");
        }
    }//GEN-LAST:event_jButtonDELActionPerformed

    private void jTableCTDHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCTDHMouseClicked
        // TODO add your handling code here:
        int selectedRow = jTableCTDH.getSelectedRow(); // Lấy chỉ số dòng đang chọn
        if (selectedRow != -1) {
            // Lấy dữ liệu từ bảng và hiển thị lên các JTextField và JComboBox
//            String maDH = jTableCTDH.getValueAt(selectedRow, 0).toString(); // Mã đơn hàng
            String maSP = jTableCTDH.getValueAt(selectedRow, 2).toString(); // Mã sản phẩm
            String soLuong = jTableCTDH.getValueAt(selectedRow, 3).toString(); // Số lượng
            String giaBan = jTableCTDH.getValueAt(selectedRow, 4).toString(); // Giá bán

            // Hiển thị lên các JTextField
            jComboBoxSP.setSelectedItem(maSP);
            jComboBoxSoluong.setSelectedItem(soLuong);
            jTextFieldTongTien.setText(giaBan);

            // Chọn đúng giá trị trong JComboBox
//            jComboBoxCTDH.setSelectedItem(maDH);
        }
    }//GEN-LAST:event_jTableCTDHMouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int selected = jTableCTDH.getSelectedRow();
        if (selected != -1) {
            try {
                  //   Giả sử MaDH ở cột 0.  Thay đổi số 0 nếu nó ở cột khác.
                int maCTDH = Integer.parseInt(jTableCTDH.getValueAt(selected, 0).toString());
                int maDH = Integer.parseInt(jTableCTDH.getValueAt(selected, 1).toString());
                int maSP = Integer.parseInt(jComboBoxSP.getSelectedItem().toString());
                int soLuong = Integer.parseInt(jComboBoxSoluong.getSelectedItem().toString());
                double giaBan = Double.parseDouble(jTextFieldTongTien.getText().trim());
        
                
                // Tạo đối tượng Employee_DTO
                OrderDetails_DTO ctdh = new OrderDetails_DTO(maCTDH, maDH, maSP, soLuong,giaBan );

                // Gọi phương thức cập nhật từ BUS
                String result = ctdhBUS.updateDH(ctdh);
                JOptionPane.showMessageDialog(this, result);
                
                editDHbyCTDH(maDH);
                loadList();

                // Cập nhật lại danh sách nhân viên trên bảng
                String n= jComboBoxCTDH.getSelectedItem().toString();
                if (n=="Xem tất cả") {
                    loadListDetails();
                }
                else {
                    int id = Integer.parseInt(n);
                    searchCTDH(id);
                }

                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Có lỗi xảy ra! Vui lòng kiểm tra lại.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn đơn hàng cần cập nhật!");
            }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButtonfindCTDHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonfindCTDHActionPerformed
        // TODO add your handling code here:
        int selectedMaCTDH = Integer.parseInt(jComboBoxFind.getSelectedItem().toString());
        if(selectedMaCTDH != 0){
            searchCTDH(selectedMaCTDH);
        }
    }//GEN-LAST:event_jButtonfindCTDHActionPerformed

    private void jComboBoxCTDHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCTDHActionPerformed
        // TODO add your handling code here:
        if (jComboBoxCTDH.getSelectedItem() != null) {
            String n= jComboBoxCTDH.getSelectedItem().toString();
            if (n=="Xem tất cả") {
                loadListDetails();
            }
            else {
                int id = Integer.parseInt(n);
                searchCTDH(id);
            }
        }
    }//GEN-LAST:event_jComboBoxCTDHActionPerformed

    private void jComboBoxSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSPActionPerformed
        // TODO add your handling code here:
        if (jComboBoxSP.getSelectedItem() != null) {
            int id = Integer.parseInt(jComboBoxSP.getSelectedItem().toString());
            Storage_DTO str = strBUS.findSP(id);
            jTextFieldSize.setText(String.valueOf(str.getSize()));
            jTextFieldPL.setText(str.getLoai());
            jTextFieldHang.setText(str.getHang());
            jTextFieldGiaBan.setText(String.valueOf(str.getGia()));
            jTextFieldTongTien.setText("");
            selectSoLuong(str.getSl());
        }
    }//GEN-LAST:event_jComboBoxSPActionPerformed

    private void jComboBoxSoluongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSoluongActionPerformed
        // TODO add your handling code here:
        if (jComboBoxSoluong.getSelectedItem() != null) {
            int quantity = Integer.parseInt(jComboBoxSoluong.getSelectedItem().toString());
            double unitPrice = Double.parseDouble(jTextFieldGiaBan.getText());
            double totalPrice;
            try {
                totalPrice = quantity * unitPrice;
                jTextFieldTongTien.setText(String.valueOf(totalPrice));
            } catch (NumberFormatException e) {
                // Xử lý lỗi khi giá trị không hợp lệ
                jTextFieldTongTien.setText("0.0");
            }
        }
    }//GEN-LAST:event_jComboBoxSoluongActionPerformed
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Order().setVisible(true);
            }
        });
    }
    
    private void searchNCC(String madh){
        Order_DTO dh = dhBUS.findbyID(madh);
        if (dh !=null){
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("MaDH");
            model.addColumn("TenKH");
            model.addColumn("NgayLap");
            model.addColumn("ThanhTien");            
            model.addColumn("PhuongThuc");

            model.addRow(new Object[]{dh.getMaHD(), dh.getTenKH(), dh.getNgayLap(), dh.getThanhTien(), dh.getPhuongThuc()});
            jTableDonHang.setModel(model);
            
//            txtID.setText(sp.getMaNCC());
//            txtName.setText(sp.getTenNCC());
//            txtDC.setText(sp.getDiaChi());
//            txtSDT.setText(sp.getSDT());
      } else{
            JOptionPane.showMessageDialog(this, "khong tim thay nha cung cap");
        }
    }
    
    private void searchCTDH(int ctdh){
            ctdhBUS.loadOrderDetailDataToTable(jTableCTDH, ctdh);                    
    }

    private void loadList(){
        Vector<Order_DTO> dhList = new Vector<Order_DTO>();
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("MaDH");
        model.addColumn("TenKH");
        model.addColumn("NgayLap");        
        model.addColumn("ThanhTien");
        model.addColumn("PhuongThuc");
        dhList = dhBUS.getALLdh();
        for (int i = 0; i < dhList.size(); i++)
        {
            Order_DTO dh = new Order_DTO();
            dh = dhList.get(i);
            String maDonHang = dh.getMaHD();
            String tenKhachHang = dh.getTenKH();
            Date ngayLap = dh.getNgayLap();
            Float thanhTien = dh.getThanhTien();
            String PhuongThuc = dh.getPhuongThuc();

            Object[] row = {maDonHang, tenKhachHang, ngayLap, thanhTien, PhuongThuc};
            model.addRow(row);
        }
        jTableDonHang.setModel(model);
        
    }
    
    private void loadListDetails(){
        Vector<OrderDetails_DTO> ctdhList = new Vector<OrderDetails_DTO>();
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("MaCTDH");
        model.addColumn("MaDH");
        model.addColumn("MaSP");
        model.addColumn("SoLuong");        
        model.addColumn("GiaBan");
        ctdhList = ctdhBUS.getALLctdh();
        for (int i = 0; i < ctdhList.size(); i++)
        {
            OrderDetails_DTO ctdh = new OrderDetails_DTO();
            ctdh = ctdhList.get(i);
            int maCTDH = ctdh.getMaCTDH();
            int maDonHang = ctdh.getMaDH();
            int maSanPham = ctdh.getMaSP();
            int SoLuong = ctdh.getSoLuong();
            double GiaBan = ctdh.getGiaBan();

            Object[] row = {maCTDH, maDonHang, maSanPham, SoLuong, GiaBan};
            model.addRow(row);
        }
        jTableCTDH.setModel(model);
        
    }
    
    private void editDHbyCTDH(int madh){
        List<OrderDetails_DTO> ctdhList = ctdhBUS.findbyID(madh);
        float s =0;
        for (OrderDetails_DTO ctdh : ctdhList) {
            s = (float) (s+ ctdh.getGiaBan());
        }
        String result = dhBUS.editDHbyCTDH(madh, s);
        JOptionPane.showMessageDialog(this, result);
    }
    
    private int generateMaCTDH() {
    return ctdhBUS.generateMaCTDH();
    }   

    private int generateMaDH() {
    return dhBUS.generateMaDH();
    }   
    
    private void populateCB() {
        ActionListener[] listeners = jComboBoxCTDH.getActionListeners();
        for (ActionListener listener : listeners) {
            jComboBoxCTDH.removeActionListener(listener);
        }
        jComboBoxCTDH.removeAllItems();
        List<Order_DTO> orderList = dhBUS.getALLdh();
        jComboBoxCTDH.addItem("Xem tất cả");
        for (Order_DTO or : orderList) {
            jComboBoxCTDH.addItem(String.valueOf(or.getMaHD()));
        }
        for (ActionListener listener : listeners) {
            jComboBoxCTDH.addActionListener(listener);
        }
        
        ActionListener[] splisteners = jComboBoxSP.getActionListeners();
        for (ActionListener listener : splisteners) {
            jComboBoxSP.removeActionListener(listener);
        }
        jComboBoxSP.removeAllItems();
        List<Storage_DTO> spList = strBUS.getALLkho();
        for (Storage_DTO sp : spList) {
            jComboBoxSP.addItem(String.valueOf(sp.getMaSP()));
        }
        for (ActionListener splistener : splisteners) {
            jComboBoxSP.addActionListener(splistener);
        }
//Code cũ
        jComboBoxMaDH.removeAllItems();  // Xóa dữ liệu cũ
        jComboBoxFind.removeAllItems();
        Vector<Order_DTO> dhList = dhBUS.getALLdh();
        for (Order_DTO dh : dhList) {


            jComboBoxMaDH.addItem(dh.getMaHD());
//            jComboBoxCTDH.addItem(String.valueOf(dh.getMaHD()));
            jComboBoxFind.addItem(String.valueOf(dh.getMaHD()));
        }   
    }
    public void selectSoLuong(int sl){
        ActionListener[] listeners = jComboBoxSoluong.getActionListeners();
        for (ActionListener listener : listeners) {
            jComboBoxSoluong.removeActionListener(listener);
        }
        jComboBoxSoluong.removeAllItems();
        for (int i=0; i<= sl;i++) {
            jComboBoxSoluong.addItem(String.valueOf(i));
        }
        for (ActionListener listener : listeners) {
            jComboBoxSoluong.addActionListener(listener);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Exit;
    private javax.swing.JButton LookSP;
    private javax.swing.JButton UPDATE;
    private javax.swing.JLabel hang;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButtonADD;
    private javax.swing.JButton jButtonADD_CTDH;
    private javax.swing.JButton jButtonDEL;
    private javax.swing.JButton jButtonEDIT;
    private javax.swing.JButton jButtonFind;
    private javax.swing.JButton jButtonfindCTDH;
    private javax.swing.JComboBox<String> jComboBoxCTDH;
    private javax.swing.JComboBox<String> jComboBoxFind;
    private javax.swing.JComboBox<String> jComboBoxMaDH;
    private javax.swing.JComboBox<String> jComboBoxPhuongThuc;
    private javax.swing.JComboBox<String> jComboBoxSP;
    private javax.swing.JComboBox<String> jComboBoxSoluong;
    private com.toedter.calendar.JDateChooser jDateCREATED;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableCTDH;
    private javax.swing.JTable jTableDonHang;
    private javax.swing.JTextField jTextFieldGiaBan;
    private javax.swing.JTextField jTextFieldHang;
    private javax.swing.JTextField jTextFieldNAME;
    private javax.swing.JTextField jTextFieldPL;
    private javax.swing.JTextField jTextFieldSize;
    private javax.swing.JTextField jTextFieldTongTien;
    // End of variables declaration//GEN-END:variables
}
